// <auto-generated />
using System;
using EmployeeManagementAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeManagementAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeManagementAPI.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "John",
                            HireDate = new DateTime(2024, 9, 6, 6, 9, 21, 786, DateTimeKind.Utc).AddTicks(5814),
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Jane",
                            HireDate = new DateTime(2024, 5, 29, 6, 9, 21, 786, DateTimeKind.Utc).AddTicks(5819),
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Michael",
                            HireDate = new DateTime(2024, 7, 18, 6, 9, 21, 786, DateTimeKind.Utc).AddTicks(5820),
                            LastName = "Brown"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Emily",
                            HireDate = new DateTime(2024, 10, 26, 6, 9, 21, 786, DateTimeKind.Utc).AddTicks(5821),
                            LastName = "Davis"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Chris",
                            HireDate = new DateTime(2024, 11, 15, 6, 9, 21, 786, DateTimeKind.Utc).AddTicks(5823),
                            LastName = "Johnson"
                        });
                });

            modelBuilder.Entity("EmployeeManagementAPI.Models.EmployeeSkill", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("EmployeeSkills");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            SkillId = 1
                        },
                        new
                        {
                            EmployeeId = 1,
                            SkillId = 3
                        },
                        new
                        {
                            EmployeeId = 2,
                            SkillId = 2
                        },
                        new
                        {
                            EmployeeId = 3,
                            SkillId = 4
                        },
                        new
                        {
                            EmployeeId = 4,
                            SkillId = 5
                        },
                        new
                        {
                            EmployeeId = 5,
                            SkillId = 1
                        },
                        new
                        {
                            EmployeeId = 5,
                            SkillId = 2
                        });
                });

            modelBuilder.Entity("EmployeeManagementAPI.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 12, 15, 6, 9, 21, 786, DateTimeKind.Utc).AddTicks(5713),
                            Description = "Expertise in C# development",
                            Name = "C# Programming"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 12, 15, 6, 9, 21, 786, DateTimeKind.Utc).AddTicks(5715),
                            Description = "Experience with SQL databases",
                            Name = "SQL Database"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 12, 15, 6, 9, 21, 786, DateTimeKind.Utc).AddTicks(5716),
                            Description = "Front-end expertise using React",
                            Name = "React Development"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 12, 15, 6, 9, 21, 786, DateTimeKind.Utc).AddTicks(5717),
                            Description = "Building scalable REST APIs",
                            Name = "API Design"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 12, 15, 6, 9, 21, 786, DateTimeKind.Utc).AddTicks(5718),
                            Description = "Strong problem-solving skills",
                            Name = "Problem Solving"
                        });
                });

            modelBuilder.Entity("EmployeeManagementAPI.Models.EmployeeSkill", b =>
                {
                    b.HasOne("EmployeeManagementAPI.Models.Employee", "Employee")
                        .WithMany("Skills")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeManagementAPI.Models.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("EmployeeManagementAPI.Models.Employee", b =>
                {
                    b.Navigation("Skills");
                });
#pragma warning restore 612, 618
        }
    }
}
